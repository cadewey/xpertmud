dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
 
dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.
 
dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.
 
dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM 
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(xpertmud, 3.2alpha1) dnl searches for some needed programs

KDE_SET_PREFIX

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

KDE_USE_QT(3.0)
AC_PATH_KDE
#MIN_CONFIG(3.0)
# -------------------
# Run COMMAND, save the exit status in ac_status, and log it.
# (This has been adapted from Autoconf's _AC_RUN_LOG macro.)
AC_DEFUN([LC_RUN_LOG],
[{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])

AC_DEFUN([LC_RUN_OUT],
[{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   lc_run_var=` ( ( $1; ac_status=$?; echo "##presep##"$ac_status ) | ( echo -n '##sep##'; cat - ) ) 2>&1`
   echo "lc_run_var: ${lc_run_var}" >&AS_MESSAGE_LOG_FD
   ac_status=$?
   $3=`echo $lc_run_var | $SED -e 's/##sep##.*//'`
   $lc_run_stdout=`echo $lc_run_var | $SED -e 's/^.*##sep##//'`
   $2=`echo $lc_run_stdout | $SED -e 's/##presep##.*//'`
   $ac_status=`echo $lc_run_stdout | $SED -e 's/^.*##presep##//'`
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])



CXXFLAGS="${CXXFLAGS} -Wall -pedantic -Wno-long-long -g -DKDE_NO_COMPAT -DQT_NO_COMPAT"

dnl PACKAGE set before

ifdef([AC_HELP_STRING],,[
AC_DEFUN([AC_HELP_STRING], [  $1       $2])
])

dnl PERL support
dnl ************


AC_ARG_ENABLE(perl, 
	AC_HELP_STRING([--enable-perl],[enable perl scripting support]), 
	PERL="$enable_perl")

case "x$enable_perl" in
	"xyes")
	AC_PATH_PROGS(PERL,perl5 perl,no)
        ;;
	"x")
	AC_PATH_PROGS(PERL,perl5 perl,no)
        ;;
        "xno")
	AC_MSG_CHECKING(for perl)
	AC_MSG_RESULT(disabled)
	WITH_PERL=""
        ;;
        *)
	AC_PATH_PROGS(PERL,$enable_perl,no)
        ;;
esac

if test "x$enable_perl" != "xno" -a "x$PERL" != "xno"; then
	AC_MSG_CHECKING(for perl version)
	$PERL -e 'require 5.004' > /dev/null 2>&1
	if test $? -ne 0 ; then
	AC_MSG_RESULT(version < 5.004 disabling)
                PERL="no"
		WITH_PERL=""
	else		
   		perl_version=`$PERL -e 'print $]'`
	  	AC_MSG_RESULT($perl_version)
	     	PERL_CPPFLAGS=`$PERL -MExtUtils::Embed -e perl_inc`
	   	PERL_LDFLAGS=`$PERL -MExtUtils::Embed -e ldopts | $PERL -pe 's/-l(gdbm|ndbm|posix|db)\b//g'`
		WITH_PERL="perl"
	fi
fi

AM_CONDITIONAL([WITH_PERL], [test x"$WITH_PERL" != x])
AC_SUBST(PERL)
AC_SUBST(PERL_CPPFLAGS)
AC_SUBST(PERL_LDFLAGS)

dnl PYTHON support
dnl **************

AC_ARG_ENABLE(python, 
	AC_HELP_STRING([--enable-python],[enable python scripting support]),
	PYTHON="$enable_python")

dnl TODO: check if xpertmud still compiles with python 1.x, if not: remove them below

case "x$enable_python" in
	"xyes")
	AC_PATH_PROGS(PYTHON,python python2.2 python2.0 python1.6,no)
        ;;
        "x")
	AC_PATH_PROGS(PYTHON,python python2.2 python2.0 python1.6,no)
        ;;
        "xno")
	AC_MSG_CHECKING(for python)
	AC_MSG_RESULT(disabled)
	WITH_PYTHON=""
        ;;
        *)
	AC_PATH_PROGS(PYTHON,$enable_python,no)
        ;;
esac

if test "x$enable_python" != "xno" -a "x$PYTHON" != "xno"; then
	dnl python {cpp,ld}flags
	WITH_PYTHON="python"
	AC_MSG_CHECKING([for python compiler flags])
	changequote(, )dnl
	PYTHON_CPPFLAGS=`$PYTHON -c '
import sys
print "-I%s/include/python%s" % (sys.prefix, sys.version[:3])' || echo -n error`
	changequote([, ])dnl
        AC_MSG_RESULT([$PYTHON_CPPFLAGS])
        if test "x$PYTHON_CPPFLAGS" == "xerror"; then
		AC_MSG_WARN([could not determine python compiler flags, disabling python support])
	   	PYTHON_CPPFLAGS=""
	   	WITH_PYTHON=""
        else
		AC_MSG_CHECKING([for python linker flags])
		changequote(, )dnl
		PYTHON_LDFLAGS=`$PYTHON -c '
import sys
import distutils.sysconfig
s = "-L%s/lib/python%s/config -lpython%s " % (sys.prefix, sys.version[:3], sys.version[:3])
s += distutils.sysconfig.get_config_var("LINKFORSHARED")
print s' 2>>/dev/null || echo -n error`
		changequote([, ])dnl
	        AC_MSG_RESULT([$PYTHON_LDFLAGS])
        	if test "x$PYTHON_LDFLAGS" == "xerror"; then
 	   		AC_MSG_WARN([could not determine python linker flags, disabling python support])
	   		PYTHON_LDFLAGS=""
	   		WITH_PYTHON=""
		fi
	fi
else
	WITH_PYTHON=""
fi

AM_CONDITIONAL([WITH_PYTHON], [test x"$WITH_PYTHON" != x])
AC_SUBST(PYTHON_CPPFLAGS)
AC_SUBST(PYTHON_LDFLAGS)


dnl --------------------------------------------
dnl       determine location of RUBY (auto)
dnl --------------------------------------------

AC_ARG_WITH(stackbase,
	AC_HELP_STRING([--with-stackbase=<value>],[pointer to the stackbase]),
[
  if test "x$with_stackbase" != "x" -a "x$with_stackbase" != "xno" ; then
AC_DEFINE_UNQUOTED(STACKBASE, $with_stackbase, [Pointer to STACKBASE])
  fi
 ])


AC_ARG_ENABLE(ruby,
        AC_HELP_STRING([--enable-ruby],[enable ruby scripting support]),
        RUBY="$enable_ruby")


case "x$enable_ruby" in
        "xyes")
        AC_PATH_PROGS(RUBY,ruby,no)
        ;;
        "x")
        AC_PATH_PROGS(RUBY,ruby,no)
        ;;
        "xno")
	AC_MSG_CHECKING(for ruby)
	AC_MSG_RESULT(disabled)
	WITH_RUBY=""
        ;;
        *)
	AC_PATH_PROGS(RUBY,$enable_ruby,no)
        ;;
esac

dnl determine location of ruby
if test "x$enable_ruby" != "xno" -a "x$RUBY" != "xno"; then
	dnl determine if the installed Ruby is suitable for us
	if test -x $RUBY; then 
	   if `$RUBY -e 'exit 1 if VERSION >= "1.6.8"'` ; then
	      AC_MSG_ERROR(Your Ruby is too old! At least Ruby-1.6.8 is required)
	      WITH_RUBY=""
	   else
	      WITH_RUBY="ruby"
	   fi
	fi

	if test "x$WITH_RUBY" != "x"; then
	   dnl locate "ruby.h", "intern.h"
	   AC_MSG_CHECKING(for ruby compiler flags)
	   ruby_h_dir=`$RUBY -r mkmf -e 'print Config::CONFIG[["archdir"]]' 2>>/dev/null`
	   RUBY_CPPFLAGS="-I$ruby_h_dir"
	   AC_MSG_RESULT([$RUBY_CPPFLAGS])
	   if test "x$ruby_h_dir" == "x"; then
	      AC_MSG_WARN([could not determine ruby compiler flags, disabling ruby support])
	      RUBY_CPPFLAGS=""
	      WITH_RUBY=""
	   fi
	fi

	if test "x$WITH_RUBY" != "x"; then
	   dnl locate libruby-static.a + extra libraries (libcrypt)
	   AC_MSG_CHECKING(for ruby linker flags)
	   ruby_lib=`$RUBY -r mkmf -e 'c=Config::CONFIG; libs=c[["libdir"]]+"/"+c[["LIBRUBY"]]+" "+c[["LIBS"]]; print libs' 2>>/dev/null`
	   RUBY_LIBS=$ruby_lib
	   AC_MSG_RESULT([$RUBY_LIBS])
	   if test "x$ruby_lib" == "x"; then
	      AC_MSG_WARN([could not determine ruby linker flags, disabling ruby support])
	      RUBY_LIBS=""
	      WITH_RUBY=""
	   fi
	fi
fi


AM_CONDITIONAL([WITH_RUBY], [test x"$WITH_RUBY" != x])
AC_SUBST(RUBY_CPPFLAGS)
AC_SUBST(RUBY_LIBS)

KDE_CREATE_SUBDIRSLIST
AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ doc/Makefile ])
AC_CONFIG_FILES([ doc/en/Makefile ])
AC_CONFIG_FILES([ po/Makefile ])
AC_CONFIG_FILES([ qextmdi/Makefile ])
AC_CONFIG_FILES([ qextmdi/src/Makefile ])
AC_CONFIG_FILES([ xpertmud/Makefile ])
AC_CONFIG_FILES([ xpertmud/kfile-plugin/Makefile ])
AC_CONFIG_FILES([ xpertmud/muds/Makefile ])
AC_CONFIG_FILES([ xpertmud/plugins/Makefile ])
AC_CONFIG_FILES([ xpertmud/plugins/battletech/Makefile ])
AC_CONFIG_FILES([ xpertmud/plugins/battletech/artwork/Makefile ])
AC_CONFIG_FILES([ xpertmud/plugins/battletech/xperthud/Makefile ])
AC_CONFIG_FILES([ xpertmud/plugins/example/Makefile ])
AC_CONFIG_FILES([ xpertmud/plugins/html/Makefile ])
AC_CONFIG_FILES([ xpertmud/scripting/Makefile ])
AC_CONFIG_FILES([ xpertmud/scripting/help/Makefile ])
AC_CONFIG_FILES([ xpertmud/scripting/perl/Makefile ])
AC_CONFIG_FILES([ xpertmud/scripting/python/Makefile ])
AC_CONFIG_FILES([ xpertmud/scripting/ruby/Makefile ])
AC_OUTPUT
if test "$all_tests" = "bad"; then
  if test ! "$cache_file" = "/dev/null"; then
    echo ""    
    echo "Please remove the file $cache_file after changing your setup"
    echo "so that configure will find the changes next time."
    echo ""
  fi
else
  echo ""
  echo "Good - your configure finished. Start make now"
  echo ""
fi
